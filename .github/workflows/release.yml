name: Release

on:
  push:
    branches:
    - main

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    env:
      ROOT: Packages/UnityPackageTest
    steps:
    - uses: actions/checkout@v2
    - name: Get package
      id: package
      run: |
        echo "::set-output name=data::$(cat ${{ env.ROOT }}/package.json | tr -d '\n')"

    - name: Create upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found
        git subtree split -P "$PKG_ROOT" -b upm
        git checkout upm
        git checkout master README.md || echo README.md not found
        mkdir Documentation~
        git checkout master README.md || echo README.md not found
        git checkout master CHANGELOG.md || echo CHANGELOG.md not found
        git checkout master LICENSE || echo LICENSE not found
        mv -f LICENSE LICENSE.md || echo Can not rename LICENSE
        if [[ -d "Samples" ]]; then
          git mv Samples Samples~
          rm -f Samples.meta
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git commit -am "fix: Samples => Samples~"
        fi
        git push -f -u origin upm
      env:
        PKG_ROOT: Packages/UnityPackageTest
      
    - name: Add Tag
      run: |
        git tag -f ${{ env.TAG }}
        git push -f origin ${{ env.TAG }}
      env:
        TAG: v ${{ fromJson(steps.package.outputs.data).version }}
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ fromJson(steps.package.outputs.data).version }}
        release_name: v${{ fromJson(steps.package.outputs.data).version }}
        body: https://github.com/kameffee/UnityPackageTest.git#v${{ fromJson(steps.package.outputs.data).version }}
        draft: true
        prerelease: false
